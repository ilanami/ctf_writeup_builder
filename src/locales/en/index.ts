// src/locales/en/index.ts
export default {
  appTitle: 'CTF Write-up Builder',
  generalInfo: {
    title: 'BASIC INFORMATION',
    writeupTitle: 'Title',
    author: 'Author',
    date: 'Date',
    selectDate: 'Select a date',
    difficulty: 'Difficulty',
    selectDifficulty: 'Select difficulty',
    tags: 'Tags',
    addTag: 'Add tag...',
    os: 'Operating System',
    selectOS: 'Select O.S.',
    machineImage: 'Machine Image',
    addImage: 'Add image',
    writeupTitlePlaceholder: "E.g. 'Kioptrix Level 1 Analysis'",
    authorPlaceholder: "Your name or alias",
    defaultWriteupTitle: "New Write-up", // Key for default title
    defaultAuthor: "Anonymous", // Key for default author
  },
  header: {
    exportMD: 'Export MD',
    exportPDF: 'Export PDF',
    importJSON: 'Import JSON',
    importMD: 'Import MD',
    importPDF: 'Import PDF',
    gist: 'Gist',
    save: 'Save',
    preview: 'Preview',
    editor: 'Editor',
    backup: 'Backup',
    new: 'New',
    newWriteupTitle: 'Start a New Write-up?',
    newWriteupDescription: 'This will clear the current write-up and load a default template. Unsaved changes will be lost.',
    cancel: 'Cancel',
    continue: 'Continue',
    switchToEnglish: 'English',
    switchToSpanish: 'Español',
    toggleLanguage: 'Toggle Language',
    donateButton: 'Donate',
    donateButtonTooltip: 'Support the project',
    configureApiKey: 'AI API Key',
  },
  structurePanel: {
    structure: 'STRUCTURE',
    addSection: 'ADD SECTION',
    noSectionsYet: 'No sections yet.',
    templateSectionsHint: 'Click a template section to start editing it.',
    untitledSection: 'Untitled Section',
    deleteSectionTitle: 'Confirm Delete Section',
    deleteSectionDescription: 'Are you sure you want to delete the section "{title}"? This action cannot be undone.',
    deleteSectionAriaLabel: 'Delete section {title}',
  },
  activeSectionEditor: {
    editingSection: 'Editing Section: {title}',
    untitledSection: 'Untitled Section',
    selectSectionToEdit: 'Select a section to edit',
    orCreateNew: 'or create a new one from the sections panel.',
    sectionTitle: 'Section Title',
    answerToQuestion: 'Answer to Question',
    flagValue: 'Flag Value',
    contentMarkdown: 'Content (Markdown)',
    aiAssistant: 'AI Assistant',
    aiPromptPlaceholder: 'E.g., \'Vulnerability analysis with Nessus\'',
    generateWithAI: 'Generate with AI',
    generating: 'Generating...',
    aiSuggestion: 'AI Suggestion:',
    copySuggestion: 'Copy Suggestion',
    deleteSuggestion: 'Clear Suggestion',
    screenshots: 'Section Screenshots',
    addScreenshot: 'Add Screenshot',
    deleteScreenshot: 'Delete screenshot "{title}"',
    titleRequiredForAI: 'Title Required',
    ensureTitleForAI: 'Please ensure the section has a title before generating content with AI.',
    suggestionGenerated: 'Suggestion Generated',
    aiGeneratedSuggestionDetails: 'AI has generated a suggestion. You can copy and paste it into your section.',
    aiError: 'AI Error',
    aiErrorDetails: 'Could not generate content: {errorMessage}',
    copied: 'Copied',
    aiSuggestionCopied: 'AI suggestion copied to clipboard.',
    errorCopying: 'Error Copying',
    couldNotCopySuggestion: 'Could not copy suggestion.',
  },
  sectionTypes: {
    paso: { label: 'Step', description: 'Describe a step in the process.' },
    pregunta: { label: 'Question', description: 'Formulate a question and its answer.' },
    flag: { label: 'Flag', description: 'Record a found flag.' },
    notas: { label: 'Notes', description: 'Add general notes or comments.' },
  },
  difficulties: {
    Fácil: 'Easy',
    Medio: 'Medium',
    Difícil: 'Hard',
    Insano: 'Insane',
    Personalizado: 'Custom',
  },
  operatingSystems: {
    Linux: 'Linux',
    Windows: 'Windows',
    macOS: 'macOS',
    Android: 'Android',
    iOS: 'iOS',
    Otro: 'Other',
  },
  toasts: {
    info: "Info",
    success: "Success",
    error: "Error",
    unknownError: "Unknown error",
    noContentToExportMD: "No active content to export to Markdown.",
    markdownExported: "Write-up exported to Markdown.",
    couldNotExportMD: "Could not export Markdown file.",
    jsonImportError: "JSON Import Error",
    jsonImportErrorDetails: "Error importing JSON: {errorMessage}",
    jsonSectionsImported: "Sections from JSON file imported and added successfully.",
    jsonNoSectionsToImport: "The JSON file did not contain a valid 'sections' array to import.",
    jsonNoSectionsToImportNothingToAdd: "The JSON file was valid but contained no sections to add or sections were empty.",
    mdImportError: "MD Import Error",
    mdImportDefaultTitle: "Imported Markdown Content",
    mdSectionImported: "Section \"{sectionTitle}\" imported and added successfully from Markdown.",
    pdfImportError: "PDF Import Error",
    pdfImportErrorPdfjs: "Could not process PDF with local parser.",
    pdfCannotReadFileForAI: "Could not read PDF file for AI processing.",
    pdfProcessingWithAI: "Processing PDF with AI...",
    pdfProcessingWithAIDescription: "This may take a few moments. Attempting to structure content.",
    pdfAIError: "PDF AI Error",
    pdfAIErrorDetails: "AI could not process the PDF: {errorMessage}",
    pdfAIErrorParsing: "AI returned a response, but it could not be parsed. Raw response: {rawResponse}",
    pdfAISectionsImported: "{count} AI-structured sections imported from PDF.",
    pdfAISectionsImportedShort: "{count} AI sections",
    pdfAINoSectionsFound: "AI processed the PDF but found no structured sections to import.",
    pdfProcessingWithPdfjs: "Processing PDF with local parser...",
    pdfProcessingWithPdfjsDescription: "Extracting text and images.",
    pdfTextSectionTitlePrefix: "Text from PDF",
    pdfImageSectionTitlePrefix: "Images from PDF",
    pdfImageSectionContent: "Extracted {imageCount} images from the PDF.",
    pdfAdditionallyImagesImported: " Additionally, {imageCount} images were imported.",
    pdfContentImported: "PDF content imported. Text and {imageCount} images added in separate sections.",
    pdfTextImported: "PDF text imported as a new section.",
    pdfTextImportedShort: "PDF text added.",
    pdfImagesImported: "{imageCount} images from PDF imported into a new section.",
    pdfImagesImportedShort: "{imageCount} PDF images added.",
    pdfImportCompleted: "PDF import completed.",
    pdfImportCompletedNoNewContent: "PDF import completed, but no new content was added.",
    pdfNoContentFromPdfjs: "Local PDF parser found no text or image content.",
    pdfAINoContentAndPdfjsNoContent: "Neither AI nor the local PDF parser could extract content.",
    jsonBackupExported: "JSON backup exported successfully.",
    couldNotExportJsonBackup: "Could not export JSON backup.",
    newWriteupCreated: "New write-up created.",
    progressSaved: "Progress Saved",
    progressSavedDetails: "Your write-up has been saved in the browser.",
    errorSavingProgress: "Error Saving",
    couldNotSaveProgress: "Could not save progress.",
    gistNotImplemented: "Gist export is not yet implemented.",
  },
   pdfModal: {
    title: "PDF Exporter for CTF Write-ups",
    close: "Close",
    theme: "Theme",
    Hacker: "Hacker",
    'Professional-Light': "Professional (Light)",
    'Professional-Dark': "Professional (Dark)",
    Cyberpunk: "Cyberpunk",
    Minimal: "Minimal",
    settings: "Settings",
    includeHeader: "Include Header",
    headerText: "Header Text",
    includeFooter: "Include Footer",
    footerText: "Footer Text",
    pageNumbering: "Page Numbering",
    autoSplitSections: "Split large sections",
    pageLayout: "Page Layout",
    pageSize: "Page Size",
    orientation: "Orientation",
    orientationVertical: "Vertical",
    orientationHorizontal: "Horizontal",
    typographyAndMedia: "Typography & Media",
    fontSize: "Font Size",
    fontSizeSmall: "Small",
    fontSizeMedium: "Medium",
    fontSizeLarge: "Large",
    imageQuality: "Image Quality",
    imageQualityLow: "Low",
    imageQualityMedium: "Medium",
    imageQualityHigh: "High",
    imageQualityMax: "Maximum",
    pdfTipsTitle: "PDF Tips",
    pdfTip1: "Use fewer images per section for better display.",
    pdfTip2: "Consider splitting very long code blocks.",
    pdfTip3: "If you see blank pages, try landscape orientation.",
    previewZoom: "Preview Zoom",
    exportButton: "Export to PDF",
    exportingButton: "Exporting...",
    hidePreview: "Hide Preview",
    showPreview: "Show Preview",
    previewHiddenTitle: "Preview Hidden",
    previewHiddenDesc: "Click \"Show Preview\" to see the document.",
    errorPreparingPDF: "Preparation Error",
    couldNotFindContentToExport: "Could not find content to export.",
    processingPDF: "Processing...",
    generatingPDF: "Generating PDF. This may take a moment.",
    errorContentEmpty: "Content Error",
    contentToExportIsEmpty: "The content to export is empty.",
    exportError: "Export Error",
    couldNotLoadPDFLibrary: "Could not load PDF library.",
    pdfExportSuccess: "Success",
    pdfExportedSuccessfully: "PDF exported successfully.",
    pdfExportFailed: "Could not export PDF. {errorMessage}. Check browser console for details.",
    untitledWriteup: "Untitled Write-up",
    authorLabel: "Author",
    dateLabel: "Date",
    difficultyLabel: "Difficulty",
    osLabel: "O.S.",
    tagsLabel: "Tags",
    machineImageLabel: "Machine Image",
    machineImageAlt: "Machine image",
    untitledSection: "Untitled Section",
    answerLabel: "Answer",
    flagLabel: "Flag",
    screenshotsLabel: "Screenshots",
    noContent: "No content.",
    errorProcessingMarkdown: "Error processing Markdown.",
    errorInvalidContentType: "Error: invalid content type for this section.",
    defaultPageFooter: "Page %p of %P",
    anonymousAuthor: "Anonymous Author",
    sectionTypePaso: "Step",
    sectionTypePregunta: "Question",
    sectionTypeFlag: "Flag",
    sectionTypeNotas: "Notes",
    futureFeatureTooltip: "Future feature",
  },
  defaultSections: {
    initialReconnaissance: "Initial Reconnaissance",
    webEnumeration: "Web Enumeration",
    exploitation: "Exploitation",
    privilegeEscalation: "Privilege Escalation",
    userFlag: "User Flag",
    rootFlag: "Root Flag",
    mainVulnerability: "Main Vulnerability",
    lessonsLearned: "Lessons Learned / Notes",
  },
  defaultSectionsContent: {
    initialReconnaissanceContent: "We started with an nmap scan, followed by web directory brute-forcing...\n\nExample command:\n```bash\nnmap -sV -sC -oN nmap_scan <TARGET_IP>\n```\nCommon tools: nmap, feroxbuster, gobuster, whatweb.",
    webEnumerationContent: "Deep analysis of the web application, searching for common vulnerabilities like XSS, SQLi, LFI/RFI.\n\nTools:\n- Burp Suite\n- Nikto\n- Dirb / Dirbuster",
    exploitationContent: "Details of the attack vector used to gain initial access.\n\nFor example, if a public exploit was used:\n```python\n# exploit_code.py\nprint(\"Exploit successful!\")\n```",
    privilegeEscalationContent: "Methods used to elevate privileges on the compromised system (e.g., kernel exploits, misconfigurations, SUID/GUID binaries).\n\nUseful commands:\n- `linpeas.sh` / `winpeas.bat`\n- `sudo -l`",
    userFlagContent: "**Flag:** `user_flag{...}`\n\n**Location:** /home/user/user.txt",
    rootFlagContent: "**Flag:** `root_flag{...}`\n\n**Location:** /root/root.txt",
    mainVulnerabilityContent: "**Question:** What was the main vulnerability exploited for initial access?\n\n**Answer:** (Describe the vulnerability, e.g., SQL Injection in the login form)",
    lessonsLearnedContent: "Key takeaways, difficulties, or things to remember for future CTFs.\n- Don't forget to check source code comments.\n- Always try default credentials.",
  },
  imageUploader: {
    selectFileButton: "Select file",
    fileTooLarge: "File is too large. Maximum {maxSize}MB.",
    invalidFileType: "Invalid file type. Please upload an image.",
    errorReadingFile: "Error reading file.",
    previewAlt: "Preview",
    deleteImageAlt: "Delete image",
    defaultLabel: "Upload Image",
    dragDropOrClick: "Drag and drop or click to select",
    maxFileSize: "(Max. {maxSize}MB)",
  },
  tagInput: {
    addButton: "Add",
    removeTagButtonLabel: "Remove tag",
  },
  donations: {
    title: "Support the Project",
    message: "Hello 👋,\n\nIf you liked this tool and found it useful, consider buying me a coffee or making a donation as a thank you.\n\nIt's not mandatory, but it would help me a lot to continue creating tools like this and to pay for the cybersecurity certifications I want to obtain.\n\nThank you very much for your support!",
    paypalLinkPlaceholder: "Your PayPal Link Here",
    closeButton: "Close",
    donateButtonAction: "Donate with PayPal",
  },
  writeupPreview: {
    tableOfContents: "Table of Contents",
  },
  aiConfig: {
    configureApiKeyButton: "Configure AI API Key",
    configureApiKeyTitle: "Configure Google AI API Key",
    configureApiKeyDescription: "To use AI features, you need to provide your own Google AI (Gemini) API Key.\nThis key will be stored securely in your browser's local storage and will not be sent to any external server except Google for processing your AI requests.\nYou are responsible for the usage and any potential costs associated with your key.",
    apiKeyLabel: "Your Google AI API Key:",
    apiKeyPlaceholder: "Paste your API key here",
    saveKeyButton: "Save Key",
    deleteKeyButton: "Delete Saved Key",
    apiKeySavedTitle: "API Key Saved",
    apiKeySavedDescription: "Your API key has been saved locally.",
    apiKeyDeletedTitle: "API Key Deleted",
    apiKeyDeletedDescription: "Your API key has been removed from local storage.",
    apiKeyEmptyTitle: "API Key Empty",
    apiKeyEmptyDescription: "Please enter a valid API key.",
    apiKeyMissingTitle: "API Key Required",
    apiKeyMissingDescription: "Please configure your Google AI API Key to use this feature.",
    apiKeyMissingDescriptionForPdf: "Please configure your Google AI API Key to attempt AI-assisted PDF processing.",
    currentKey: "Current key",
  },
} as const;

